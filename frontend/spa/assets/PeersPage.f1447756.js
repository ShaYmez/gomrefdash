import{Q as i}from"./QTable.02d57964.js";import{a as c,l as n}from"./axios.df14c455.js";import"./compiler-core.esm-bundler.7084f33c.js";import{_ as m,A as d,r as p,B as u,Q as f,G as r,F as h}from"./index.b081e8e4.js";import"./QBtn.bb08db27.js";import"./scroll.dd47d0da.js";const _=[{name:"callsign",label:"Callsign",field:"callsign",sortable:!0},{name:"ip",label:"IP",field:"ip",sortable:!0},{name:"linkedmodule",label:"Linked Module",field:"linkedmodule",sortable:!0},{name:"connecttime",label:"Connect Time",field:"connecttime",sortable:!0},{name:"lastheardtime",label:"Last Heard Time",field:"lastheardtime",sortable:!0}],g=d({data(){return{name:"Peers",peer_columns:_,peer_rows:[],pagination:p({rowsPerPage:0}),intervalId:null}},mounted(){this.fetchPeers(),this.intervalId=setInterval(()=>{this.fetchPeers()},2e4)},beforeRouteLeave(e,t,o){clearInterval(this.intervalId),o()},methods:{fetchPeers(){let e="/json/peers";c.get(e).then(t=>{let o=t.data;o.forEach(function(a,s){a.id=s+1,a.connecttime=n(a.connecttime),a.lastheardtime=n(a.lastheardtime),o[s]=a}),this.peer_rows=o}).catch(t=>{console.error(t)})}}}),b={class:"q-pa-sm"},v={class:"row"},w={class:"col-xs-12 col-md-12"},P={class:"q-pa-md"};function k(e,t,o,a,s,I){return u(),f("div",b,[r("div",v,[r("div",w,[r("div",P,[h(i,{rows:e.peer_rows,columns:e.peer_columns,"row-key":"name","virtual-scroll":"",pagination:e.pagination,"onUpdate:pagination":t[0]||(t[0]=l=>e.pagination=l),"rows-per-page-options":[0]},null,8,["rows","columns","pagination"])])])])])}var q=m(g,[["render",k]]);export{q as default};
